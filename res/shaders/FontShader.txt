##VERTEX

#version 330

layout(location = 0) in vec2 position;
layout(location = 1) in vec2 textureCoords;

uniform vec2 translation;

out vec2 passTextureCoords;

void main()
{
    passTextureCoords = textureCoords;
	gl_Position =  vec4(position + translation, 0.0, 1.0);
}

##FRAGMENT

#version 330

in vec2 passTextureCoords;

out vec4 outColour;

uniform vec3 colour;
uniform sampler2D fontAtlas;

const float width = 0.5;
const float edge = 0.1;

const float borderWidth = 0.7;
const float borderEdge = 0.1;

const vec3 outlineColour = vec3(0.0, 0.0, 0.0);

float smoothlyStep(float edge0, float edge1, float x){
    float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
    return t * t * (3.0 - 2.0 * t);
}

void main(void){

    float distance = 1.0 - texture(fontAtlas, passTextureCoords).a;
    float alpha = 1.0 - smoothlyStep(width, width + edge, distance);

    float distance2 = 1.0 - texture(fontAtlas, passTextureCoords).a;
    float outlineAlpha = 1.0 - smoothlyStep(borderWidth, borderWidth + borderEdge, distance);

    float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
    vec3 overallColour = mix(outlineColour, colour, alpha / overallAlpha);

    outColour = vec4(overallColour, overallAlpha);
}